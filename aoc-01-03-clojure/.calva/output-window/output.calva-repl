; This is the Calva evaluation results output window.
; TIPS: The keyboard shortcut `ctrl+alt+o o` shows and focuses this window
;   when connected to a REPL session.
; Please see https://calva.io/output/ for more info.
; Happy coding! ♥️

; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 
; Starting Jack-in Terminal: pushd /home/ojarrisonn_/Dev/learn/aoc/advent-of-code-2023/aoc-01-03-clojure ; lein update-in :dependencies conj '[nrepl,"1.0.0"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.28.5"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless ; popd
; Jacking in...
; Connecting using "Leiningen" project type.
; You can make Calva auto-select this.
;   - See https://calva.io/connect-sequences/
; 
; Starting Jack-in Terminal: pushd /home/ojarrisonn_/Dev/learn/aoc/advent-of-code-2023/aoc-01-03-clojure ; lein update-in :dependencies conj '[nrepl,"1.0.0"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.28.5"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless ; popd
; Using host:port 127.0.0.1:40871 ...
; Hooking up nREPL sessions ...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
; Evaluating code from settings: 'calva.autoEvaluateCode.onConnect.clj'
nil
clj꞉aoc-clj.core꞉>  ; Use `alt+enter` to evaluate
clj꞉aoc-clj.core꞉> 
; Jack-in done.
clj꞉aoc-clj.core꞉> 
; Evaluating file: day03.clj
#'aoc-clj.day03/get-part-number
clj꞉aoc-clj.day03꞉> 
(get-part-number 0 0 false)
nil
clj꞉aoc-clj.day03꞉> 
(is-symbol-around? 0 2)
true
clj꞉aoc-clj.day03꞉> 
; Evaluating file: day03.clj
#'aoc-clj.day03/get-part-number
clj꞉aoc-clj.day03꞉> 
(get-part-number 0 0 false)
finished
; Execution error (NullPointerException) at aoc-clj.day03/get-part-number (day03.clj:35).
; Cannot invoke "clojure.lang.IFn.invoke(Object)" because the return value of "clojure.lang.IFn.invoke(Object)" is null
clj꞉aoc-clj.day03꞉> 
; Evaluating file: day03.clj
#'aoc-clj.day03/get-part-number
clj꞉aoc-clj.day03꞉> 
(get-part-number 0 0 false)
nil
clj꞉aoc-clj.day03꞉> 
(>= 0 h)
false
clj꞉aoc-clj.day03꞉> 
(>= 0 w)
false
clj꞉aoc-clj.day03꞉> 
(or (>= 0 w) (>= 0 h))
false
; Evaluating file: day03.clj
clj꞉aoc-clj.day03꞉> 
#'aoc-clj.day03/get-part-number
clj꞉aoc-clj.day03꞉> 
(get-part-number 0 0 false
                 )
nil
clj꞉aoc-clj.day03꞉> 
; Evaluating file: day03.clj
#'aoc-clj.day03/get-part-number
clj꞉aoc-clj.day03꞉> 
(get-part-number 0 0 false)
nil
clj꞉aoc-clj.day03꞉> 
; Evaluating file: day03.clj
#'aoc-clj.day03/get-part-number
clj꞉aoc-clj.day03꞉> 
(get-part-number 0 0 false)
[-1 -1]
[0 -1]
[1 -1]
467..114..
nil
clj꞉aoc-clj.day03꞉> 
; Evaluating file: day03.clj
#'aoc-clj.day03/get-part-number
clj꞉aoc-clj.day03꞉> 
(get-part-number 0 0 false)
467..114..
nil
clj꞉aoc-clj.day03꞉> 
; Evaluating file: day03.clj
#'aoc-clj.day03/get-part-number
clj꞉aoc-clj.day03꞉> 
(get-part-number 0 0 false)
| 467..114.. |
nil
clj꞉aoc-clj.day03꞉> 
(get-char 0 0)
"467..114.."
clj꞉aoc-clj.day03꞉> 
schematic
(("467..114..")
 ("...*......")
 ("..35..633.")
 ("......#...")
 ("617*......")
 (".....+.58.")
 ("..592.....")
 ("......755.")
 ("...$.*....")
 (".664.598.."))
clj꞉aoc-clj.day03꞉> (-> schematic (nth 1))
("...*......")
clj꞉aoc-clj.day03꞉> 
(-> schematic (nth 1) (nth 1))
; Execution error (IndexOutOfBoundsException) at aoc-clj.day03/eval8549 (form-init406489649910469458.clj:121).
; null
clj꞉aoc-clj.day03꞉> 
(-> schematic (nth 1) (nth 0) (nth 1))
\.
clj꞉aoc-clj.day03꞉> 
; Evaluating file: day03.clj
#'aoc-clj.day03/get-part-number
clj꞉aoc-clj.day03꞉> 
(get-part-number 0 0 false)
[4 true]
clj꞉aoc-clj.day03꞉> 
